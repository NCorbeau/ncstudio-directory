---
import DirectoryLayout from "../../layouts/DirectoryLayout.astro";
import { AppProvider } from "../../components/solid/providers/AppContext";
import SearchBar from "../../components/solid/SearchBar";
import LayoutContainer from "../../components/solid/LayoutContainer";
import { generateDirectoryHomeSchema } from "../../utils/schema-generator";
import {
  getAllDirectories,
  getDirectoryConfig,
  getFeaturedListings,
  getRecentListings,
  getDirectoryListings,
  getDirectoryLandingPages,
} from "../../utils/directory-helpers";

// Generate all dynamic routes
export async function getStaticPaths() {
  const directories = await getAllDirectories();

  return directories.map((directory) => ({
    params: { directory: directory.id },
    props: { directoryId: directory.id },
  }));
}

// Get directory ID from props
const { directoryId } = Astro.props;

// Fetch directory data
const directoryData = await getDirectoryConfig(directoryId);

// Handle case where directory isn't found
if (!directoryData) {
  return Astro.redirect("/404");
}

const defaultLayout = directoryData.data.defaultLayout || 'Card';
const availableLayouts = directoryData.data.availableLayouts || ['Card'];

// Always render with default layout initially for server-side rendering
let currentLayout = defaultLayout;

// Fetch all listings (for any layout type)
const allListings = await getDirectoryListings(directoryId);

// Fetch featured listings (for featured section below main listings)
const featuredListings = await getFeaturedListings(directoryId, 6);

// Fetch recent listings (for recent section)
const recentListings = await getRecentListings(directoryId, 4);

// Fetch landing pages
const landingPages = await getDirectoryLandingPages(directoryId);

// Get categories from directory data
const categories = directoryData.data.categories || [];

// Construct canonical URL
const canonicalUrl = new URL(
  `/${directoryId}/`,
  Astro.site || "http://localhost:4321"
).toString();

// Generate structured data for home page
const structuredData = generateDirectoryHomeSchema(
  directoryData.data,
  canonicalUrl
);

// Get the direct URL query string for preserving filters when switching layouts
const queryString = Astro.url.search;

// Determine which listings to show in the main layout
const mainListings = allListings;
---

<DirectoryLayout
  title={directoryData.data.metaTags?.title || directoryData.data.name}
  description={directoryData.data.metaTags?.description ||
    directoryData.data.description}
  directoryData={directoryData.data}
  canonicalUrl={canonicalUrl}
  structuredData={structuredData}
>
  <AppProvider initialDirectoryId={directoryId} client:load>
    <!-- Hero Section -->
    <section class="hero">
      <div class="container">
        <h1>{directoryData.data.name}</h1>
        <p class="lead">{directoryData.data.description}</p>

        <div class="search-container">
          <SearchBar
            directoryId={directoryId}
            placeholder={`Search ${directoryData.data.name}...`}
            client:load
          />
        </div>
      </div>
    </section>

    <!-- Main Listings with Layout Switching -->
    <section class="main-listings">
      <div class="container">
        <div class="section-header">
          <h2>Browse {directoryData.data.name}</h2>
          
          {allListings.length > 0 ? (
            <span class="listing-count">{allListings.length} listings found</span>
          ) : (
            <span class="listing-count">No listings found</span>
          )}
        </div>

        {allListings.length > 0 ? (
          <LayoutContainer
            listings={mainListings}
            directory={directoryData.data}
            currentLayout={currentLayout}
            categories={categories}
            searchParams={queryString}
            directoryId={directoryId}
            client:visible
          />
        ) : (
          <div class="no-listings-message">
            <p>No listings have been added to this directory yet.</p>
          </div>
        )}
      </div>
    </section>

    <!-- Categories Section -->
    {categories.length > 0 && (
      <section class="categories">
        <div class="container">
          <div class="section-header">
            <h2>Browse by Category</h2>
          </div>

          <div class="category-grid">
            {categories.map((category) => (
              <a
                href={`/${directoryId}/category/${category.id}`}
                class="category-card"
              >
                <h3>{category.name}</h3>
                {category.description && <p>{category.description}</p>}
              </a>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Recent Listings Section (if different from featured and not empty) -->
    {recentListings.length > 0 &&
      !recentListings.every((r) =>
        featuredListings.some((f) => f.slug === r.slug)
      ) && (
        <section class="recent">
          <div class="container">
            <div class="section-header">
              <h2>Recent Additions</h2>
              <a href={`/${directoryId}/search?sort=newest`} class="view-all">
                View All
              </a>
            </div>

            <div class="listing-grid">
              {recentListings.map((listing) => (
                <div class="recent-card">
                  <h3>
                    <a href={`/${directoryId}/${listing.slug.replace(`${directoryId}/`, "")}`}>
                      {listing.data.title}
                    </a>
                  </h3>
                  <p>{listing.data.description.substring(0, 120)}...</p>
                  {listing.data.updatedAt && (
                    <div class="date-added">
                      Added {new Date(listing.data.updatedAt).toLocaleDateString()}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

    <!-- Landing Pages / Guides Section -->
    {landingPages.length > 0 && (
      <section class="guides">
        <div class="container">
          <div class="section-header">
            <h2>Guides & Resources</h2>
          </div>

          <div class="guides-grid">
            {landingPages.slice(0, 3).map((page) => (
              <a
                href={`/${directoryId}/page/${page.slug.replace(`${directoryId}/`, "")}`}
                class="guide-card"
              >
                {page.data.featuredImage && (
                  <div class="guide-image">
                    <img src={page.data.featuredImage} alt={page.data.title} />
                  </div>
                )}
                <div class="guide-content">
                  <h3>{page.data.title}</h3>
                  <p>{page.data.description}</p>
                </div>
              </a>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- About Section with Call-to-Action -->
    <section class="about">
      <div class="container">
        <div class="about-content">
          <h2>About {directoryData.data.name}</h2>
          <p>
            Discover the best {directoryData.data.name.toLowerCase()} with our comprehensive
            directory. Our expert team researches and curates the finest selections
            to help you find exactly what you're looking for.
          </p>
          <a href={`/${directoryId}/search`} class="cta-button">Start Exploring</a>
        </div>
      </div>
    </section>
  </AppProvider>
</DirectoryLayout>

<style>
  /* Hero section */
  .hero {
    background-color: var(--primaryColor);
    color: white;
    padding: 4rem 0;
    text-align: center;
  }

  .hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .lead {
    font-size: 1.25rem;
    max-width: 800px;
    margin: 0 auto 2rem;
    opacity: 0.9;
  }

  .search-container {
    max-width: 600px;
    margin: 0 auto;
  }

  /* Main layout section */
  .main-listings {
    padding: 3rem 0;
  }

  /* Container */
  .container {
    max-width: var(--max-width, 1200px);
    margin: 0 auto;
    padding: 0 1rem;
  }

  /* Section styling */
  section {
    padding: 4rem 0;
  }

  section:nth-child(even) {
    background-color: #f9f9f9;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .section-header h2 {
    font-size: 2rem;
    margin: 0;
  }

  .view-all {
    color: var(--primaryColor);
    text-decoration: none;
    font-weight: 500;
  }

  .listing-count {
    color: #666;
    font-size: 0.95rem;
  }

  .no-listings-message {
    text-align: center;
    padding: 3rem;
    background-color: #f5f5f5;
    border-radius: 8px;
    color: #666;
  }

  /* Category cards */
  .category-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .category-card {
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    text-decoration: none;
    color: #333;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
    border: 1px solid #eee;
    height: 100%;
  }

  .category-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .category-card h3 {
    font-size: 1.3rem;
    margin-bottom: 0.75rem;
    color: var(--primaryColor);
  }

  .category-card p {
    font-size: 0.95rem;
    color: #666;
    margin: 0;
  }

  /* Recent listings */
  .listing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  .recent-card {
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    border: 1px solid #eee;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .recent-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
  }

  .recent-card h3 {
    font-size: 1.2rem;
    margin-bottom: 0.75rem;
  }

  .recent-card h3 a {
    color: var(--primaryColor);
    text-decoration: none;
  }

  .recent-card p {
    color: #666;
    font-size: 0.95rem;
    margin-bottom: 1rem;
  }

  .date-added {
    font-size: 0.8rem;
    color: #999;
  }

  /* Guide cards */
  .guides-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
  }

  .guide-card {
    display: flex;
    flex-direction: column;
    background-color: white;
    border-radius: 8px;
    overflow: hidden;
    text-decoration: none;
    color: #333;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
    border: 1px solid #eee;
    height: 100%;
  }

  .guide-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .guide-image {
    height: 200px;
    overflow: hidden;
  }

  .guide-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s;
  }

  .guide-card:hover .guide-image img {
    transform: scale(1.05);
  }

  .guide-content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .guide-content h3 {
    font-size: 1.3rem;
    margin-bottom: 0.75rem;
    color: #333;
  }

  .guide-content p {
    font-size: 0.95rem;
    color: #666;
    margin: 0;
    flex-grow: 1;
  }

  /* About section */
  .about {
    text-align: center;
    background-color: #f5f5f5;
  }

  .about-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .about-content h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .about-content p {
    font-size: 1.1rem;
    margin-bottom: 2rem;
    color: #555;
  }

  .cta-button {
    display: inline-block;
    background-color: var(--primaryColor);
    color: white;
    padding: 0.75rem 2rem;
    border-radius: 50px;
    font-weight: 500;
    text-decoration: none;
    transition:
      background-color 0.2s,
      transform 0.2s;
  }

  .cta-button:hover {
    background-color: var(--primaryColor-dark, #2a549f);
    transform: translateY(-2px);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .hero h1 {
      font-size: 2.5rem;
    }

    .section-header {
      flex-direction: column;
      text-align: center;
      gap: 1rem;
    }

    .listing-grid,
    .category-grid,
    .guides-grid {
      grid-template-columns: 1fr;
    }
  }
</style>