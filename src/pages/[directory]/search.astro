---
import DirectoryLayout from '../../layouts/DirectoryLayout.astro';
import ListingCard from '../../components/core/ListingCard.astro';
import SearchBar from '../../components/core/SearchBar.astro';
import { getAllDirectories, getDirectoryConfig, searchListings } from '../../utils/directory-helpers';

// Generate all dynamic routes
export async function getStaticPaths() {
  const directories = await getAllDirectories();
  
  return directories.map(directory => ({
    params: { directory: directory.id },
    props: { directoryId: directory.id }
  }));
}

// Get directory ID from props
const { directoryId } = Astro.props;

// Get search query from URL
const query = Astro.url.searchParams.get('q') || '';

// Fetch directory data
const directoryData = await getDirectoryConfig(directoryId);

// Handle case where directory isn't found
if (!directoryData) {
  return Astro.redirect('/404');
}

// Search for listings if there's a query
const filteredListings = query 
  ? await searchListings(directoryId, query)
  : [];

// Construct canonical URL (without query parameter for base URL)
const baseUrl = new URL(`/${directoryId}/search`, Astro.site || 'http://localhost:3000').toString();
const canonicalUrl = query ? `${baseUrl}?q=${encodeURIComponent(query)}` : baseUrl;

// Generate breadcrumbs
const breadcrumbs = [
  {
    name: directoryData.data.name,
    url: `/${directoryId}/`
  },
  {
    name: 'Search',
    url: baseUrl
  }
];

// Add search query to breadcrumbs if present
if (query) {
  breadcrumbs.push({
    name: `Results for "${query}"`,
    url: canonicalUrl
  });
}
---

<DirectoryLayout
  title={query ? `Search results for "${query}" | ${directoryData.data.name}` : `Search | ${directoryData.data.name}`}
  description={`Search for listings in ${directoryData.data.name}`}
  directoryData={directoryData.data}
  canonicalUrl={canonicalUrl}
  breadcrumbs={breadcrumbs}
>
  <div class="container">
    <header class="search-header">
      <h1>{query ? `Search results for "${query}"` : 'Search Listings'}</h1>
      
      <div class="search-wrapper">
        <SearchBar 
          directoryId={directoryId}
          placeholder={`Search ${directoryData.data.name}...`}
          initialQuery={query}
        />
      </div>
    </header>
    
    {query && (
      <div class="search-info">
        <p>Found {filteredListings.length} result{filteredListings.length !== 1 ? 's' : ''}</p>
        
        {filteredListings.length > 0 && (
          <a href={`/${directoryId}/search`} class="clear-search">Clear search</a>
        )}
      </div>
    )}
    
    {query && filteredListings.length > 0 ? (
      <div class="listing-grid">
        {filteredListings.map(listing => (
          <ListingCard 
            listing={listing.data} 
            url={`/${directoryId}/${listing.slug.replace(`${directoryId}/`, '')}`}
            theme={directoryData.data.theme}
          />
        ))}
      </div>
    ) : query ? (
      <div class="no-results">
        <div>
          <p>No listings found matching "{query}".</p>
          <p>Try using different keywords or browse by category.</p>
          <a href={`/${directoryId}/`} class="back-link">Back to homepage</a>
        </div>
      </div>
    ) : (
      <div class="no-results">
        <div>
          <p>Enter a search term above to find listings.</p>
          <p>You can search by name, description, location, or category.</p>
        </div>
      </div>
    )}
    
    {!query && (
      <div class="browse-categories">
        <h2>Browse by Category</h2>
        <div class="category-grid">
          {directoryData.data.categories.map(category => (
            <a href={`/${directoryId}/category/${category.id}`} class="category-card">
              <h3>{category.name}</h3>
              {category.description && <p>{category.description}</p>}
            </a>
          ))}
        </div>
      </div>
    )}
  </div>
</DirectoryLayout>

<style>
  .container {
    max-width: var(--max-width, 1200px);
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .search-header {
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .search-header h1 {
    font-size: 2.2rem;
    margin-bottom: 2rem;
  }
  
  .search-wrapper {
    max-width: 600px;
    margin: 0 auto 2rem;
  }
  
  .search-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    font-size: 0.95rem;
    color: #666;
  }
  
  .clear-search {
    color: var(--primaryColor);
    text-decoration: none;
  }
  
  .clear-search:hover {
    text-decoration: underline;
  }
  
  .listing-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }
  
  .no-results {
    text-align: center;
    padding: 3rem 0;
    background-color: #f9f9f9;
    border-radius: 8px;
  }
  
  .no-results p {
    margin-bottom: 1rem;
    font-size: 1.1rem;
    color: #666;
  }
  
  .back-link {
    display: inline-block;
    margin-top: 1rem;
    padding: 0.5rem 1.5rem;
    background-color: var(--primaryColor);
    color: white;
    text-decoration: none;
    border-radius: 4px;
    font-weight: 500;
  }
  
  .back-link:hover {
    background-color: var(--primaryColor-dark, #2a549f);
  }
  
  .browse-categories {
    margin-top: 3rem;
  }
  
  .browse-categories h2 {
    font-size: 1.8rem;
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .category-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
  }
  
  .category-card {
    background-color: #f9f9f9;
    border-radius: 8px;
    padding: 1.5rem;
    text-decoration: none;
    color: #333;
    transition: transform 0.2s, box-shadow 0.2s;
    border: 1px solid #eee;
  }
  
  .category-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .category-card h3 {
    font-size: 1.3rem;
    margin-bottom: 0.75rem;
    color: var(--primaryColor);
  }
  
  .category-card p {
    font-size: 0.95rem;
    color: #666;
    margin: 0;
  }
  
  @media (max-width: 768px) {
    .search-header h1 {
      font-size: 1.8rem;
    }
    
    .listing-grid,
    .category-grid {
      grid-template-columns: 1fr;
    }
  }
</style>