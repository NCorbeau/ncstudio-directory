---
// src/components/layouts/MagazineLayout.astro
// Editorial/magazine style layout with featured listings and categorized sections

const { listings, directory, categories = [], directoryId } = Astro.props;
const theme = directory.theme || 'default';

// Function to truncate text
function truncateText(text, maxLength = 150) {
  if (!text || text.length <= maxLength) return text;
  return text.substring(0, maxLength) + '...';
}

// Get featured listings
const featuredListings = listings.filter(listing => listing.data.featured);

// Get a listing with an image for the featured spot
const heroListing = featuredListings.find(listing => 
  listing.data.images && listing.data.images.length > 0
) || featuredListings[0] || listings[0];

// Group remaining listings by category
const listingsByCategory = {};

// Initialize categories
categories.forEach(category => {
  listingsByCategory[category.id] = [];
});

// Fill categories with listings
listings.forEach(listing => {
  // Skip the hero listing
  if (listing.slug === heroListing?.slug) return;

  const categoryId = listing.data.category;
  if (categoryId && listingsByCategory[categoryId]) {
    listingsByCategory[categoryId].push(listing);
  }
});

// Get categories that have listings
const populatedCategories = categories.filter(category => 
  listingsByCategory[category.id] && listingsByCategory[category.id].length > 0
);
---

<div class="magazine-layout">
  {heroListing && (
    <div class="hero-feature">
      <a href={`/${directoryId}/${heroListing.slug.replace(`${directoryId}/`, '')}`} class="hero-card">
        <div class="hero-image">
          {heroListing.data.images && heroListing.data.images.length > 0 ? (
            <img src={heroListing.data.images[0]} alt={heroListing.data.title} />
          ) : (
            <div class="placeholder-image">
              <span>{heroListing.data.title[0]}</span>
            </div>
          )}
          <div class="hero-overlay"></div>
        </div>
        
        <div class="hero-content">
          {heroListing.data.featured && <span class="featured-badge">Featured</span>}
          
          <h2>{heroListing.data.title}</h2>
          <p>{truncateText(heroListing.data.description, 200)}</p>
          
          <div class="meta-info">
            {heroListing.data.rating && (
              <span class="rating">
                <span class="stars" style={`--rating: ${heroListing.data.rating}`}></span>
                <span class="rating-text">{heroListing.data.rating} out of 5</span>
              </span>
            )}
            
            {heroListing.data.address && (
              <span class="address">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                  <circle cx="12" cy="10" r="3"></circle>
                </svg>
                {heroListing.data.address}
              </span>
            )}
          </div>
          
          <span class="read-more">Read More</span>
        </div>
      </a>
    </div>
  )}
  
  <div class="category-sections">
    {populatedCategories.map(category => (
      <section class="category-section">
        <div class="section-header">
          <h3>{category.name}</h3>
          <a href={`/${directoryId}/category/${category.id}`} class="view-all">View All</a>
        </div>
        
        <div class="listing-row">
          {listingsByCategory[category.id].slice(0, 3).map(listing => (
            <a href={`/${directoryId}/${listing.slug.replace(`${directoryId}/`, '')}`} class="listing-card">
              <div class="card-image">
                {listing.data.images && listing.data.images.length > 0 ? (
                  <img src={listing.data.images[0]} alt={listing.data.title} />
                ) : (
                  <div class="placeholder-image">
                    <span>{listing.data.title[0]}</span>
                  </div>
                )}
                {listing.data.featured && <span class="mini-badge">Featured</span>}
              </div>
              
              <div class="card-content">
                <h4>{listing.data.title}</h4>
                <p>{truncateText(listing.data.description, 100)}</p>
                
                {listing.data.rating && (
                  <div class="rating-small">
                    <span class="stars-small" style={`--rating: ${listing.data.rating}`}></span>
                  </div>
                )}
              </div>
            </a>
          ))}
        </div>
      </section>
    ))}
  </div>
  
  <div class="editor-picks">
    <div class="section-header">
      <h3>Editor's Picks</h3>
    </div>
    
    <div class="picks-grid">
      {featuredListings.slice(0, 6).map(listing => (
        <a href={`/${directoryId}/${listing.slug.replace(`${directoryId}/`, '')}`} class="pick-card">
          <div class="pick-image">
            {listing.data.images && listing.data.images.length > 0 ? (
              <img src={listing.data.images[0]} alt={listing.data.title} />
            ) : (
              <div class="placeholder-image small">
                <span>{listing.data.title[0]}</span>
              </div>
            )}
          </div>
          
          <div class="pick-content">
            <h4>{listing.data.title}</h4>
            
            {listing.data.tags && listing.data.tags.length > 0 && (
              <div class="pick-tags">
                {listing.data.tags.slice(0, 2).map(tag => (
                  <span class="pick-tag">{tag}</span>
                ))}
              </div>
            )}
          </div>
        </a>
      ))}
    </div>
  </div>
  
  <div class="magazine-footer">
    <a href={`/${directoryId}/search`} class="view-all-button">View All Listings</a>
  </div>
</div>

<style>
  .magazine-layout {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  
  /* Hero Feature */
  .hero-feature {
    width: 100%;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }
  
  .hero-card {
    display: block;
    position: relative;
    color: inherit;
    text-decoration: none;
    overflow: hidden;
    height: 500px;
  }
  
  .hero-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }
  
  .hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s;
  }
  
  .hero-card:hover .hero-image img {
    transform: scale(1.05);
  }
  
  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.1) 0%,
      rgba(0, 0, 0, 0.7) 100%
    );
    z-index: 2;
  }
  
  .hero-content {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 2rem;
    z-index: 3;
    color: white;
  }
  
  .featured-badge {
    display: inline-block;
    background-color: var(--secondaryColor, #ff9900);
    color: #fff;
    font-size: 0.9rem;
    font-weight: 500;
    padding: 0.3rem 0.8rem;
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  
  .hero-content h2 {
    font-size: 2.5rem;
    margin: 0 0 1rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .hero-content p {
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    max-width: 750px;
  }
  
  .meta-info {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
  }
  
  .rating, .address {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .stars {
    position: relative;
    display: inline-block;
    font-size: 1rem;
    width: 5em;
  }
  
  .stars::before {
    content: "★★★★★";
    color: rgba(255, 255, 255, 0.3);
  }
  
  .stars::after {
    content: "★★★★★";
    color: #ffc107;
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--rating) / 5 * 100%);
    overflow: hidden;
  }
  
  .rating-text {
    font-size: 0.9rem;
  }
  
  .read-more {
    display: inline-block;
    background-color: white;
    color: var(--primaryColor, #3366cc);
    padding: 0.5rem 1.5rem;
    border-radius: 30px;
    font-weight: 500;
    transition: transform 0.2s;
  }
  
  .hero-card:hover .read-more {
    transform: translateY(-3px);
  }
  
  /* Placeholder image for listings without images */
  .placeholder-image {
    background-color: var(--primaryColor, #3366cc);
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4rem;
    font-weight: bold;
    color: white;
  }
  
  .placeholder-image.small {
    font-size: 2rem;
  }
  
  /* Category Sections */
  .category-sections {
    display: flex;
    flex-direction: column;
    gap: 3rem;
  }
  
  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid #eee;
  }
  
  .section-header h3 {
    font-size: 1.5rem;
    margin: 0;
    color: var(--primaryColor, #3366cc);
  }
  
  .view-all {
    color: var(--primaryColor, #3366cc);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
  }
  
  .view-all:hover {
    text-decoration: underline;
  }
  
  .listing-row {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
  }
  
  .listing-card {
    display: block;
    color: inherit;
    text-decoration: none;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    height: 100%;
    transition: transform 0.3s, box-shadow 0.3s;
  }
  
  .listing-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
  }
  
  .card-image {
    height: 180px;
    position: relative;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .mini-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: var(--secondaryColor, #ff9900);
    color: white;
    font-size: 0.7rem;
    padding: 0.2rem 0.5rem;
    border-radius: 3px;
  }
  
  .card-content {
    padding: 1rem;
  }
  
  .card-content h4 {
    font-size: 1.1rem;
    margin: 0 0 0.75rem;
  }
  
  .card-content p {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.75rem;
  }
  
  .rating-small {
    display: inline-block;
  }
  
  .stars-small {
    position: relative;
    display: inline-block;
    font-size: 0.8rem;
    width: 5em;
  }
  
  .stars-small::before {
    content: "★★★★★";
    color: #ddd;
  }
  
  .stars-small::after {
    content: "★★★★★";
    color: #ffc107;
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--rating) / 5 * 100%);
    overflow: hidden;
  }
  
  /* Editor's Picks */
  .editor-picks {
    margin-top: 1rem;
  }
  
  .picks-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
  }
  
  .pick-card {
    display: flex;
    align-items: center;
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid #eee;
    color: inherit;
    text-decoration: none;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .pick-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .pick-image {
    width: 80px;
    height: 80px;
    border-radius: 6px;
    overflow: hidden;
    flex-shrink: 0;
    margin-right: 1rem;
  }
  
  .pick-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .pick-content {
    flex-grow: 1;
  }
  
  .pick-content h4 {
    font-size: 1rem;
    margin: 0 0 0.5rem;
  }
  
  .pick-tags {
    display: flex;
    gap: 0.5rem;
  }
  
  .pick-tag {
    font-size: 0.7rem;
    background-color: #f0f0f0;
    padding: 0.15rem 0.5rem;
    border-radius: 3px;
    color: #666;
  }
  
  /* Footer */
  .magazine-footer {
    text-align: center;
    margin-top: 2rem;
  }
  
  .view-all-button {
    display: inline-block;
    background-color: var(--primaryColor, #3366cc);
    color: white;
    padding: 0.75rem 2rem;
    border-radius: 30px;
    font-weight: 500;
    text-decoration: none;
    transition: background-color 0.2s, transform 0.2s;
  }
  
  .view-all-button:hover {
    background-color: var(--primaryColor-dark, #2a549f);
    transform: translateY(-3px);
  }
  
  /* Responsive adjustments */
  @media (max-width: 992px) {
    .picks-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 768px) {
    .hero-card {
      height: 400px;
    }
    
    .hero-content h2 {
      font-size: 2rem;
    }
    
    .listing-row {
      grid-template-columns: 1fr;
    }
    
    .picks-grid {
      grid-template-columns: 1fr;
    }
    
    .magazine-layout {
      gap: 2rem;
    }
  }
</style>