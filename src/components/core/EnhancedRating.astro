---
export interface Props {
  rating?: number;
  reviewCount?: number;
  theme?: string;
  size?: 'small' | 'medium' | 'large';
  showCount?: boolean;
}

const { rating, reviewCount, theme = 'default', size = 'medium', showCount = true } = Astro.props;

const hasRating = rating && rating > 0;
const hasReviews = reviewCount && reviewCount > 0;
---

{hasRating && (
  <div class={`enhanced-rating ${theme} ${size}`}>
    <div class="rating-stars" style={`--rating: ${rating}`}>
      <span class="stars"></span>
    </div>
    
    <span class="rating-value">{rating.toFixed(1)}</span>
    
    {showCount && hasReviews && (
      <span class="review-count">({reviewCount.toLocaleString()})</span>
    )}
  </div>
)}

<style>
  .enhanced-rating {
    display: flex;
    align-items: center;
    gap: 0.375rem;
  }
  
  .rating-stars {
    position: relative;
    display: inline-block;
  }
  
  .stars {
    position: relative;
    display: inline-block;
    color: var(--rating-color, #f59e0b);
  }
  
  .stars::before {
    content: "★★★★★";
    letter-spacing: 2px;
    color: #e5e7eb;
  }
  
  .stars::after {
    content: "★★★★★";
    letter-spacing: 2px;
    color: var(--rating-color, #f59e0b);
    position: absolute;
    top: 0;
    left: 0;
    width: calc(var(--rating) / 5 * 100%);
    overflow: hidden;
  }
  
  .rating-value {
    font-weight: 600;
    color: var(--text-color, #111);
    font-size: 0.9rem;
  }
  
  .review-count {
    color: var(--text-color-light, #666);
    font-size: 0.85rem;
    font-weight: 500;
  }
  
  /* Size variations */
  .small {
    gap: 0.25rem;
  }
  
  .small .stars {
    font-size: 0.8rem;
  }
  
  .small .rating-value {
    font-size: 0.8rem;
  }
  
  .small .review-count {
    font-size: 0.75rem;
  }
  
  .medium {
    gap: 0.375rem;
  }
  
  .medium .stars {
    font-size: 0.9rem;
  }
  
  .large {
    gap: 0.5rem;
  }
  
  .large .stars {
    font-size: 1.1rem;
  }
  
  .large .rating-value {
    font-size: 1rem;
    font-weight: 700;
  }
  
  .large .review-count {
    font-size: 0.9rem;
  }
  
  /* Theme variations */
  .nature {
    --rating-color: var(--secondaryColor, #f59e0b);
    --text-color: var(--textColor, #2d3c2e);
    --text-color-light: var(--textColorLight, #5a6b5b);
  }
  
  .modern {
    --rating-color: #fbbf24;
    --text-color: #111111;
    --text-color-light: #666;
  }
  
  .modern .rating-value {
    font-weight: 700;
  }
  
  .modern .stars::before {
    letter-spacing: 3px;
  }
  
  .modern .stars::after {
    letter-spacing: 3px;
  }
  
  .elegant {
    --rating-color: #d4af37;
    --text-color: var(--textColor, #2c3e50);
    --text-color-light: var(--textColorLight, #7f8c8d);
  }
  
  .elegant .stars::before {
    letter-spacing: 3px;
  }
  
  .elegant .stars::after {
    letter-spacing: 3px;
  }
  
  .elegant .rating-value {
    font-weight: 500;
  }
</style> 