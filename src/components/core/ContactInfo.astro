---
import { formatPhoneNumber, formatWebsiteUrl } from "@/utils/listing-helpers";

export interface Props {
  phone?: string;
  website?: string;
  theme?: string;
  layout?: 'horizontal' | 'vertical';
}

const { phone, website, theme = 'default', layout = 'horizontal' } = Astro.props;
const formattedPhone = formatPhoneNumber(phone);
const formattedWebsite = formatWebsiteUrl(website);
---

{(phone || website) && (
  <div class={`contact-info ${theme} ${layout}`}>
    {phone && (
      <a href={`tel:${phone}`} class="contact-item phone">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
        </svg>
        <span>{formattedPhone}</span>
      </a>
    )}
    {website && (
      <a href={website} class="contact-item website" target="_blank" rel="noopener noreferrer">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <circle cx="12" cy="12" r="10"></circle>
          <line x1="2" y1="12" x2="22" y2="12"></line>
          <path d="m4.93 4.93 4.24 4.24"></path>
          <path d="m14.83 9.17 4.24-4.24"></path>
          <path d="m14.83 14.83 4.24 4.24"></path>
          <path d="m9.17 14.83-4.24 4.24"></path>
        </svg>
        <span>{formattedWebsite}</span>
      </a>
    )}
  </div>
)}

<style>
  .contact-info {
    display: flex;
    gap: 1rem;
    font-size: 0.85rem;
  }
  
  .contact-info.vertical {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .contact-item {
    display: flex;
    align-items: center;
    gap: 0.4rem;
    color: var(--text-color-light, #666);
    text-decoration: none;
    transition: color 0.2s;
  }
  
  .contact-item:hover {
    color: var(--primary-color, #3366cc);
  }
  
  .contact-item svg {
    flex-shrink: 0;
    color: var(--primary-color, #666);
  }
  
  .contact-item span {
    font-weight: 500;
  }
  
  .nature .contact-item {
    color: var(--textColorLight, #5a6b5b);
  }
  
  .nature .contact-item:hover,
  .nature .contact-item svg {
    color: var(--primaryColor, #4b7f52);
  }
  
  .modern .contact-item {
    font-weight: 600;
  }
  
  .modern .contact-item:hover,
  .modern .contact-item svg {
    color: var(--primaryColor, #0070f3);
  }
  
  .elegant .contact-item {
    color: var(--textColorLight, #7f8c8d);
  }
  
  .elegant .contact-item:hover,
  .elegant .contact-item svg {
    color: var(--primaryColor, #9c7c38);
  }
  
  @media (max-width: 480px) {
    .contact-info.horizontal {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style> 