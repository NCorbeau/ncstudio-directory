---
/**
 * SEO Component
 * Provides comprehensive meta tags and structured data for SEO optimization
 */

 interface Props {
  title: string;
  description: string;
  canonicalUrl: string;
  image?: string;
  type?: 'website' | 'article' | 'place' | 'product' | 'profile';
  publishedDate?: string;
  modifiedDate?: string;
  author?: string;
  directoryData: any;
  structuredData?: any;
  noindex?: boolean;
  keywords?: string[];
}

const { 
  title, 
  description, 
  canonicalUrl,
  image,
  type = 'website',
  publishedDate,
  modifiedDate,
  author,
  directoryData,
  structuredData,
  noindex = false,
  keywords = []
} = Astro.props;


// Default image if none provided
const ogImage = image || (directoryData?.logo || '/default-og-image.jpg');

// Generate a full absolute URL for the OG image
const ogImageUrl = new URL(ogImage, Astro.site || canonicalUrl).toString();

// Combine keywords from props and directory meta tags
const allKeywords = [
  ...keywords,
  ...(directoryData.metaTags?.keywords || [])
].filter(Boolean);

// Site name from directory
const siteName = directoryData.name;

// Determine language
const language = directoryData.metaTags?.language || 'en';

// Check if URL is using a custom domain
const isCustomDomain = canonicalUrl.includes(directoryData.domain || '');
---

<!-- Basic Meta Tags -->
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>{title}</title>
<meta name="description" content={description} />
{allKeywords.length > 0 && <meta name="keywords" content={allKeywords.join(', ')} />}
<meta name="author" content={author || siteName} />
<link rel="canonical" href={canonicalUrl} />
{noindex && <meta name="robots" content="noindex,nofollow" />}
<meta name="generator" content={import.meta.env.GENERATOR || 'Multi-Directory Generator'} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImageUrl} />
<meta property="og:site_name" content={siteName} />
{publishedDate && <meta property="article:published_time" content={new Date(publishedDate).toISOString()} />}
{modifiedDate && <meta property="article:modified_time" content={new Date(modifiedDate).toISOString()} />}
{author && <meta property="article:author" content={author} />}

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={canonicalUrl} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={ogImageUrl} />
{directoryData.metaTags?.twitterHandle && <meta name="twitter:site" content={directoryData.metaTags.twitterHandle} />}

<!-- Language and locale -->
<meta property="og:locale" content={language} />
<html lang={language} />

<!-- Structured Data / JSON-LD -->
{structuredData && (
  <script type="application/ld+json" set:html={
    typeof structuredData === 'string' 
      ? structuredData 
      : JSON.stringify(structuredData)
  } />
)}

<!-- Custom directory meta tags if specified -->
{directoryData.metaTags?.custom?.map(tag => (
  <meta name={tag.name} content={tag.content} />
))}

<!-- Favicon -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<!-- Sitemap reference -->
<link rel="sitemap" type="application/xml" href={isCustomDomain ? "/sitemap.xml" : `/${directoryData.id}/sitemap.xml`} />