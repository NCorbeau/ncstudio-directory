---
import { getCollection } from 'astro:content';

const { directoryName, logo, theme = 'default' } = Astro.props;
const currentPath = Astro.url.pathname;
const directoryId = currentPath.split('/')[1];

// Get directory data to access categories
let directoryData;
try {
  const directories = await getCollection('directories');
  directoryData = directories.find(dir => dir.id === directoryId)?.data;
} catch (error) {
  console.error(`Error loading directory data for ${directoryId}:`, error);
}

// Categories for navigation
const categories = directoryData?.categories || [];
---

<header class={`site-header theme-${theme}`}>
  <div class="container">
    <div class="logo-container">
      {logo ? (
        <a href={`/${directoryId}/`} class="logo">
          <img src={logo} alt={`${directoryName} logo`} />
        </a>
      ) : (
        <a href={`/${directoryId}/`} class="site-name">
          {directoryName}
        </a>
      )}
    </div>

    <nav class="main-nav">
      <ul>
        <li>
          <a href={`/${directoryId}/`} class={currentPath === `/${directoryId}/` ? 'active' : ''}>
            Home
          </a>
        </li>
        {categories.slice(0, 4).map(category => (
          <li>
            <a 
              href={`/${directoryId}/category/${category.id}`}
              class={currentPath === `/${directoryId}/category/${category.id}` ? 'active' : ''}
            >
              {category.name}
            </a>
          </li>
        ))}
        {categories.length > 4 && (
          <li class="more-menu">
            <button>More</button>
            <ul class="dropdown">
              {categories.slice(4).map(category => (
                <li>
                  <a href={`/${directoryId}/category/${category.id}`}>
                    {category.name}
                  </a>
                </li>
              ))}
            </ul>
          </li>
        )}
        <li>
          <a href={`/${directoryId}/search`} class="search-link">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="11" cy="11" r="8"></circle>
              <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
            </svg>
            <span class="sr-only">Search</span>
          </a>
        </li>
      </ul>
    </nav>

    <button class="mobile-menu-toggle" aria-label="Toggle menu">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </div>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    const mainNav = document.querySelector('.main-nav');
    
    if (menuToggle && mainNav) {
      menuToggle.addEventListener('click', () => {
        menuToggle.classList.toggle('active');
        mainNav.classList.toggle('open');
      });
    }
    
    // Handle more menu dropdown
    const moreMenu = document.querySelector('.more-menu button');
    if (moreMenu) {
      moreMenu.addEventListener('click', (e) => {
        e.preventDefault();
        moreMenu.parentElement?.classList.toggle('open');
      });
      
      // Close more menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!moreMenu.parentElement?.contains(e.target as Node)) {
          moreMenu.parentElement?.classList.remove('open');
        }
      });
    }
  });
</script>

<style>
  .site-header {
    background-color: var(--header-background, var(--primaryColor));
    color: var(--text-on-primary, white);
    padding: 1rem 0;
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
  
  .container {
    max-width: var(--max-width, 1200px);
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
  }
  
  .logo img {
    height: 40px;
    width: auto;
  }
  
  .site-name {
    font-size: 1.5rem;
    font-weight: bold;
    color: inherit;
    text-decoration: none;
  }
  
  .main-nav ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 1.5rem;
  }
  
  .main-nav a {
    color: inherit;
    text-decoration: none;
    padding: 0.5rem 0;
    position: relative;
    font-weight: 500;
  }
  
  .main-nav a:after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 0;
    background-color: currentColor;
    transition: width 0.2s;
  }
  
  .main-nav a:hover:after,
  .main-nav a.active:after {
    width: 100%;
  }
  
  .more-menu {
    position: relative;
  }
  
  .more-menu button {
    background: none;
    border: none;
    color: inherit;
    font-weight: 500;
    font-family: inherit;
    font-size: inherit;
    cursor: pointer;
    padding: 0.5rem 0;
  }
  
  .dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: white;
    color: #333;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    padding: 0.5rem 0;
    min-width: 180px;
    display: none;
    flex-direction: column;
    gap: 0;
  }
  
  .more-menu.open .dropdown {
    display: flex;
  }
  
  .dropdown li {
    width: 100%;
  }
  
  .dropdown a {
    padding: 0.75rem 1rem;
    display: block;
    width: 100%;
  }
  
  .dropdown a:hover {
    background-color: #f5f5f5;
  }
  
  .search-link svg {
    vertical-align: middle;
  }
  
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  .mobile-menu-toggle {
    display: none;
    background: none;
    border: none;
    width: 30px;
    height: 24px;
    position: relative;
    cursor: pointer;
    flex-direction: column;
    justify-content: space-between;
  }
  
  .mobile-menu-toggle span {
    display: block;
    height: 2px;
    width: 100%;
    background-color: currentColor;
    transition: transform 0.3s, opacity 0.3s;
  }
  
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }
    
    .main-nav {
      position: fixed;
      top: 70px;
      left: 0;
      right: 0;
      background-color: var(--header-background, var(--primaryColor));
      padding: 1rem;
      height: 0;
      overflow: hidden;
      transition: height 0.3s;
    }
    
    .main-nav.open {
      height: auto;
      max-height: calc(100vh - 70px);
      overflow-y: auto;
    }
    
    .main-nav ul {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .main-nav a {
      display: block;
      padding: 0.75rem 0;
    }
    
    .mobile-menu-toggle.active span:nth-child(1) {
      transform: translateY(11px) rotate(45deg);
    }
    
    .mobile-menu-toggle.active span:nth-child(2) {
      opacity: 0;
    }
    
    .mobile-menu-toggle.active span:nth-child(3) {
      transform: translateY(-11px) rotate(-45deg);
    }
    
    .dropdown {
      position: static;
      box-shadow: none;
      padding-left: 1rem;
    }
  }
</style>