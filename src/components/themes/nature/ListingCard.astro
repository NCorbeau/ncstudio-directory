---
import { getCategoryName, getThumbnailImage, limitTags } from "@/utils/listing-helpers";
import Rating from "@/components/core/Rating.astro";
import CardAddress from "@/components/core/CardAddress.astro";
import type { ListingData } from "@/types";

// src/components/themes/nature/ListingCard.astro
export interface Props {
  listing: ListingData;
  url: string;
}

const { listing, url } = Astro.props;

// Get thumbnail image
const thumbnail = getThumbnailImage(listing.images);

// Get category name if available
const categoryName = listing.category 
  ? await getCategoryName(listing.directory, listing.category)
  : '';
---

<div class="listing-card">
  <a href={url} class="card-link">
    <div class="card-image">
      <img src={thumbnail} alt={listing.title} loading="lazy" />
      
      {listing.featured && (
        <span class="featured-badge">Featured</span>
      )}
      
      {categoryName && (
        <span class="card-category">{categoryName}</span>
      )}
    </div>
    
    <div class="card-content">
      <h3 class="card-title">{listing.title}</h3>
      
      {typeof listing.fields.rating === 'number' && (
        <Rating rating={listing.fields.rating} theme="nature" />
      )}
      
      <p class="card-description">{listing.description}</p>
      
      <div class="card-meta">
        <CardAddress address={listing.fields.address} theme="nature" />
        
        {listing.tags && listing.tags.length > 0 && (
          <div class="card-tags">
            {limitTags(listing.tags).map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </div>
  </a>
</div>

<style>
  .listing-card {
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    background-color: white;
    transition: transform 0.3s, box-shadow 0.3s;
    height: 100%;
    position: relative;
  }
  
  .listing-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
  }
  
  .listing-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 5px;
    height: 100%;
    background-color: var(--primaryColor, #4b7f52);
    opacity: 0.7;
    transition: width 0.3s;
    z-index: 1;
  }
  
  .listing-card:hover::before {
    width: 8px;
  }
  
  .card-link {
    display: flex;
    flex-direction: column;
    color: inherit;
    text-decoration: none;
    height: 100%;
  }
  
  .card-image {
    height: 200px;
    position: relative;
    overflow: hidden;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s;
  }
  
  .listing-card:hover .card-image img {
    transform: scale(1.05);
  }
  
  .featured-badge {
    position: absolute;
    top: 16px;
    right: 16px;
    background-color: var(--secondaryColor, #f9a825);
    color: var(--textColor, #2d3c2e);
    font-size: 0.75rem;
    font-weight: 600;
    padding: 0.35rem 0.9rem;
    border-radius: 20px;
    z-index: 1;
  }
  
  .card-category {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0,0,0,0.7), rgba(0,0,0,0));
    color: white;
    font-size: 0.85rem;
    font-weight: 600;
    padding: 1.5rem 1rem 0.75rem;
    z-index: 1;
  }
  
  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .card-title {
    font-size: 1.25rem;
    margin: 0 0 0.75rem;
    font-weight: 600;
    color: var(--textColor, #2d3c2e);
  }
  
  .card-description {
    font-size: 0.95rem;
    color: var(--textColorLight, #5a6b5b);
    margin-bottom: 1.5rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    line-height: 1.5;
    flex-grow: 1;
  }
  
  .card-meta {
    margin-top: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tag {
    font-size: 0.75rem;
    background-color: rgba(var(--primaryColor-rgb, 75, 127, 82), 0.1);
    color: var(--primaryColor, #4b7f52);
    padding: 0.2rem 0.6rem;
    border-radius: 20px;
    font-weight: 500;
  }
  
  @media (max-width: 768px) {
    .card-image {
      height: 180px;
    }
  }
</style>