---
// src/layouts/BaseLayout.astro
// This is the foundational layout used by all pages across all directories

import { getCurrentDirectoryId } from '../utils/directory-helpers';
import SEO from '../components/core/SEO.astro';

interface Props {
  title: string;
  description?: string;
  image?: string;
  canonicalUrl?: string;
  structuredData?: object | null;
  directoryData: any;
  publishedDate?: string;
  modifiedDate?: string;
  author?: string;
  type?: 'website' | 'article' | 'place' | 'product' | 'profile';
  noindex?: boolean;
  keywords?: string[];
}

const { 
  title, 
  description = "Discover the best options in our comprehensive directory.", // Default value
  image,
  canonicalUrl = Astro.url.href,
  structuredData = null,
  directoryData, // This might be incomplete or undefined in some cases
  publishedDate,
  modifiedDate,
  author,
  type = 'website',
  noindex = false,
  keywords = []
} = Astro.props;

// Get the current directory ID from the URL or environment
const urlParts = Astro.url.pathname.split('/');
const directoryId = urlParts[1] || import.meta.env.CURRENT_DIRECTORY || 'default';

// Ensure directoryData is always at least an empty object to prevent errors
const safeDirectoryData = directoryData || {
  name: 'Directory Listing',
  description: description,
  metaTags: {},
  theme: 'default',
  primaryColor: '#3366cc',
  secondaryColor: '#ff9900'
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <SEO
      title={title}
      description={description}
      canonicalUrl={canonicalUrl}
      image={image}
      directoryData={safeDirectoryData}
      structuredData={structuredData}
      publishedDate={publishedDate}
      modifiedDate={modifiedDate}
      author={author}
      type={type}
      noindex={noindex}
      keywords={keywords}
    />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Global base styles - using absolute paths -->
    <link rel="stylesheet" href="/styles/global.css" />
    
    <!-- Slot for additional head content -->
    <slot name="head" />
  </head>
  <body>
    <slot />
    
    <!-- Basic analytics script (replace with your preferred solution) -->
    <script is:inline define:vars={{ directoryId }}>
      // Simple page view tracking - you would replace this with your analytics provider
      document.addEventListener('DOMContentLoaded', () => {
        const sendPageView = () => {
          if (typeof window._analytics !== 'undefined') {
            window._analytics.trackPageView({
              directoryId: directoryId,
              path: window.location.pathname,
              title: document.title
            });
          }
        };
        
        // Track initial page view
        sendPageView();
        
        // Track navigation changes for SPA navigation
        document.addEventListener('astro:page-load', sendPageView);
      });
    </script>
    
    <!-- Slot for additional body scripts -->
    <slot name="after-body" />
  </body>
</html>